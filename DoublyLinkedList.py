# -*- coding: utf-8 -*-
"""DoublyLinkedList.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vTltjIjEfkIHUmFj6BWM4ETtA4cdAT8f
"""

class Node:
  
  def __init__(self, data):
    self.data = data
    self.prev = None
    self.next = None
    
  def set_prev(self, prev):
    self.prev = prev
    
  def set_next(self, next):
    self.next = next
  
  def get_data(self):
    return self.data
  
  def get_prev(self):
    return self.prev
  
  def get_next(self):
    return self.next
  
class Doubly_linked_list:
  
  def __init__(self):
    self.header = None
    self.tail = None
    self.size = 0
    
  def print_list(self):
    print(">> current list")
    node = self.header
    while node is not None:
      print(node.get_data())
      node = node.get_next()
    print(">>>>>>>>>>>>>>>>")
    
  def append(self, data):
    new_node = Node(data)
    self.size += 1
    if self.header is None:
      self.header = new_node
    else:
      self.tail.set_next(new_node)
      new_node.set_prev(self.tail)
    self.tail = new_node    
  
  def search(self, data):
    node = self.header
    while node is not None:
      if node.get_data() == data:
        return node
      node = node.get_next()
    return None
  
  def get_near_by(self, data, scope):
    list = []
    node = self.header
    while node is not None:
      if node.get_data() == data:
        pvnode = node.get_prev()
        for i in range(scope):
          if node.get_prev() is None:
            break
          else:
            list.append(pvnode)
            pvnode = pvnode.get_prev()
        nxnode = node.get_next()  
        for j in range(scope):
          if node.get_next() is None:
            break
          else:
            list.append(nxnode)
            nxnode = nxnode.get_next()
        return list
        
      node = node.get_next()

    return None
    
    
dll = Doubly_linked_list()
dll.append("Apple")
dll.append("Kiwi")
dll.append("Banana")
dll.append("Melon")
dll.append("Orange")
dll.append("Blackberry")

list = dll.get_near_by("Banana", 2)
for node in list:
  print(node.get_data())
print("==================================")  
list = dll.get_near_by("Apple", 3)
for node in list:
  print(node.get_data())

list = dll.get_near_by("AAA", 3)
for node in list:
  print(node.get_data())
